#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
int is_valid_key(const char *key) {
    int char_count[26] = {0};

    // Check if the key contains 26 characters
    if (strlen(key) != 26) {
        return 0;
    }

    for (int i = 0; key[i] != '\0'; i++) {
        char c = tolower(key[i]);

        if (!isalpha(c)) {
            return 0;
        }
        int index = c - 'a';
        if (char_count[index] > 0) {
            return 0;
        }

        char_count[index]++;
    }

    return 1;
}

void encrypt(const char *key, const char *plaintext) {
    printf("ciphertext: ");

    for (int i = 0; plaintext[i] != '\0'; i++) {
        char c = plaintext[i];
        if (isalpha(c)) {
            char offset = isupper(c) ? 'A' : 'a';
            int index = tolower(c) - 'a';
            printf("%c", isupper(c) ? toupper(key[index]) : key[index]);
        } else {
            printf("%c", c);
        }
    }

    printf("\n");
}

int main(int argc, char *argv[]) {
    if (argc != 2) {
        printf("Usage: %s key\n", argv[0]);
        return 1;
    }
    if (!is_valid_key(argv[1])) {
        printf("Key is invalid\n");
        return 1;
    }

    char plaintext[1000]; 
    printf("plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    encrypt(argv[1], plaintext);

    return 0;
}
